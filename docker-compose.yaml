version: '3.8'
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: mynode-ts
    env_file:
      - .env
    image: mynode-ts
    depends_on:
      db:
        condition: service_healthy

  db:
    restart: always
    image: postgres:17-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
  nginx:
    image: nginx:1
    ports:
      - 8089:80
      - 8090:443
    depends_on:
      - backend
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/ssl/certs
      - ./scripts/init.sh:/init.sh
    entrypoint: ['/bin/bash', '-c', "./init.sh && nginx -g 'daemon off;'"]
    # entrypoint: ['/bin/sh', '-c', "chmod +x /init.sh && ./init.sh && nginx -g 'daemon off;'"]

volumes:
  pgdata:
